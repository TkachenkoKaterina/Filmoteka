{"mappings":"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","sources":["src/partials-js/authorization.js"],"sourcesContent":["import axios from 'axios';\n\n// auth modal login & signup\nconst signUp = document.querySelector('#signupbox');\nconst signIn = document.querySelector('#signinbox');\n\nconst btnIn = document.querySelector('.btn-in');\nconst btnUp = document.querySelector('.btn-up');\n\n// // Switches to 'Create Account'\nbtnUp.addEventListener('click', () => {\n  signUp.style.display = 'block';\n  signIn.style.display = 'none';\n});\n\n// // Switches to 'Sign In'\nbtnIn.addEventListener('click', () => {\n  signUp.style.display = 'none';\n  signIn.style.display = 'block';\n});\n\n//--------------\n//-----close auth modal\nconst closeButton = document.querySelector('button.auth-close');\nconst authModalRef = document.querySelector('.login-backdrop');\n\nconst fnCloseButton = () => {\n  authModalRef.classList.add('is-hidden');\n  authModalRef.classList.add('full-close');\n};\n\ncloseButton.addEventListener('click', () => {\n  fnCloseButton();\n});\n//----------------------\n\n//-------- auth request\n//const loginText = document.querySelector('.title-text .login');\nconst loginForm = document.querySelector('form#signinform');\nconst signupForm = document.querySelector('form#signupform');\n//const loginBtn = document.querySelector('button#loginsubmit');\n//const signupBtn = document.querySelector('button#signupsubmit');\n\nconst createUser = async (email, password) => {\n  const baseURL =\n    'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC9fG7Shg0PcLy-7vLSSNqMkxzduprzfqU';\n  if (!email || !password) return;\n  try {\n    const data = await axios.post(baseURL, {\n      email,\n      password,\n      returnSecureToken: true,\n    });\n    //console.log(data);\n    return data;\n  } catch (error) {\n    //console.log(error.response.data.error.message.replaceAll('_', ' '));\n    //console.log(error);\n    return error;\n  }\n};\n\nconst authUser = async (email, password) => {\n  const baseURL =\n    'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC9fG7Shg0PcLy-7vLSSNqMkxzduprzfqU';\n  if (!email || !password) return;\n  try {\n    const data = await axios.post(baseURL, {\n      email,\n      password,\n      returnSecureToken: true,\n    });\n    //console.log(data);\n    return data;\n  } catch (error) {\n    // console.log(error.response.data.error.message.replace('_', ' '));\n    //console.log('-----------------------------');\n    //console.log(error);\n    return error;\n  }\n};\n\nconst getDb = async () => {\n  const baseURL =\n    'https://filmoteks-users-base-default-rtdb.europe-west1.firebasedatabase.app/data.json';\n  try {\n    const data = await axios.get(baseURL);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    // console.log(error);\n    return error;\n  }\n};\n\nconst postDb = async item => {\n  const baseURL =\n    'https://filmoteks-users-base-default-rtdb.europe-west1.firebasedatabase.app/data.json';\n  try {\n    const data = await axios.patch(baseURL, item);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    // console.log(error);\n    return error;\n  }\n};\n// console.log(createUser(email, password));\n// console.log(authUser(email, password));\n// console.log(postDb());\n// console.log(getDb());\n\n/// ---------- work html\n//const loginForm = document.querySelector('form.login');\nconst mailLogin = document.querySelector('[name=mailLogin]');\nconst pswdLogin = document.querySelector('[name=pswdLogin]');\n//const error = document.querySelector('#error');\n\nconst nameSignup = document.querySelector('[name=nameSignup]');\nconst emailSignup = document.querySelector('[name=emailSignup]');\nconst pswdSignup = document.querySelector('[name=pswdSignup]');\nconst pswdSignupConf = document.querySelector('[name=pswdSignupConf]');\nconst errorIn = document.querySelector('.errIn');\nconst errorUp = document.querySelector('.errUp');\n\nconst defaultErrorText = () => {\n  errorIn.textContent = '';\n  errorUp.textContent = '';\n  //   error.textContent = 'enter email and password';\n  //   error.textContent = 'new user';\n};\n\nconst clearFields = () => {\n  mailLogin.value = '';\n  pswdLogin.value = '';\n  nameSignup.value = '';\n  emailSignup.value = '';\n  pswdSignup.value = '';\n  pswdSignupConf.value = '';\n};\n\ndefaultErrorText();\n//console.dir(mailLogin);\nloginForm.addEventListener('submit', async ev => {\n  ev.preventDefault();\n  //console.log(mailLogin.value, pswdLogin.value);\n  if (!mailLogin.value || !pswdLogin.value) return;\n\n  mailLogin.value.trim();\n  const res = await authUser(mailLogin.value, pswdLogin.value);\n  //console.log(await res);\n\n  if ((await res.status) != 200) {\n    const message = res.response.data.error.message.replaceAll('_', ' ');\n    //const message = res.data.error.message.replaceAll('_', ' ');\n\n    //console.log(message);\n    errorIn.textContent = message;\n    loginForm.addEventListener('click', defaultErrorText);\n    //console.log(message.includes('email'));\n    if (message.includes('EMAIL')) {\n      mailLogin.classList.add('error-border');\n    }\n    console.log(message.includes('PASSWORD'));\n    if (message.includes('PASSWORD')) {\n      pswdLogin.classList.add('error-border');\n    }\n    return;\n  }\n\n  const userInfo = await getDb();\n\n  if (userInfo.status == 200) {\n    loginForm.removeEventListener('click', defaultErrorText);\n    defaultErrorText();\n    clearFields();\n    document.location.href = './my-library.html';\n  }\n\n  //const itemId = mailLogin.value.replace('@', '').replaceAll('.', '');\n});\n\nsignupForm.addEventListener('submit', async ev => {\n  ev.preventDefault();\n  //                      console.log(ev);\n  if (!emailSignup.value || !pswdSignup.value) return;\n  if (pswdSignup.value !== pswdSignupConf.value) return;\n  mailLogin.value.trim();\n\n  const res = await createUser(emailSignup.value, pswdSignup.value);\n  //console.log(res);\n\n  if ((await res.status) != 200) {\n    const message = res.response.data.error.message.replaceAll('_', ' ');\n    errorUp.textContent = message;\n    signupForm.addEventListener('click', defaultErrorText);\n\n    return;\n  }\n\n  // console.log('1-----------');\n  let idItem = emailSignup.value.replace('@', '').replaceAll('.', '');\n  const userItem = {};\n  userItem[idItem] = {\n    id: '',\n    name: nameSignup.value,\n    email: emailSignup.value,\n    password: pswdSignup.value,\n  };\n\n  const userInfo = await postDb(userItem);\n  if (userInfo.status == 200) {\n    signupForm.removeEventListener('click', defaultErrorText);\n    defaultErrorText();\n    clearFields();\n  }\n  //console.log(idItem);\n});\n"],"names":["$2shzp","parcelRequire","$2b72455f650aae37$var$signUp","document","querySelector","$2b72455f650aae37$var$signIn","$2b72455f650aae37$var$btnIn","addEventListener","style","display","$2b72455f650aae37$var$closeButton","$2b72455f650aae37$var$authModalRef","classList","add","$2b72455f650aae37$var$loginForm","$2b72455f650aae37$var$signupForm","$2b72455f650aae37$var$mailLogin","$2b72455f650aae37$var$pswdLogin","$2b72455f650aae37$var$nameSignup","$2b72455f650aae37$var$emailSignup","$2b72455f650aae37$var$pswdSignup","$2b72455f650aae37$var$pswdSignupConf","$2b72455f650aae37$var$errorIn","$2b72455f650aae37$var$errorUp","$2b72455f650aae37$var$defaultErrorText","textContent","$2b72455f650aae37$var$clearFields","value","async","ev","preventDefault","trim","res","email","password","default","post","returnSecureToken","error","$2b72455f650aae37$var$authUser","status","message","response","data","replaceAll","includes","console","log","get","$2b72455f650aae37$var$getDb","removeEventListener","location","href","$2b72455f650aae37$var$createUser","userItem","replace","id","name","item","patch","$2b72455f650aae37$var$postDb"],"version":3,"file":"index.17ded0f1.js.map"}